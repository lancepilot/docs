{
  "openapi": "3.1.0",
  "info": {
    "title": "Lancepilot API",
    "description": "API for Lancepilot",
    "version": "1.0.0",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://lasting-mudfish-lucky.ngrok-free.app/api/v3"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/workspaces": {
      "get": {
        "summary": "Get all workspaces",
        "description": "Retrieve a list of all workspaces associated with the authenticated user.",
        "tags": ["Workspace"],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "description": "Filter workspaces based on search criteria.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of workspaces retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access."
          }
        }
      },
      "post": {
        "summary": "Create a new workspace",
        "description": "Create a new workspace for the authenticated user.",
        "tags": ["Workspace"],
        "requestBody": {
          "description": "Workspace creation parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Workspace created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Exceeds workspace creation limit."
          },
          "422": {
            "description": "Unprocessable Entity: Validation errors."
          }
        }
      }
    },
    "/workspaces/{workspace_id}": {
      "post": {
        "summary": "Update a workspace",
        "description": "Update the specified workspace.",
        "tags": ["Workspace"],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "description": "ID of the workspace to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Workspace update parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workspace updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a workspace",
        "description": "Delete a workspace by ID.",
        "tags": ["Workspace"],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "description": "ID of the workspace to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: Workspace not found or unauthorized access."
          }
        }
      }
    },
    "/workspaces/partner-permissions": {
      "get": {
        "summary": "Get partner default permissions",
        "description": "Retrieve the authenticated user’s default permissions for partner workspaces.",
        "tags": ["Workspace"],
        "responses": {
          "200": {
            "description": "Permissions fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/update-partner-permissions": {
      "post": {
        "summary": "Update partner default permissions",
        "description": "Update the default permissions applied to new partner workspaces created by the user.",
        "tags": ["Workspace"],
        "requestBody": {
          "description": "Permissions update parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionsUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permissions updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspace}/contacts": {
      "get": {
        "summary": "Get contacts for a workspace",
        "description": "Retrieve contacts associated with a specific workspace.",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter contacts based on search criteria.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of contacts per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "summary": "Add Contact",
        "description": "Create a new contact in the specified workspace.",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "description": "ID of the workspace.",
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contact creation payload (multipart/form-data).",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Phone number. Must be valid, not a channel, and unique in workspace."
                  },
                  "status": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Boolean status. In multipart, send `1` or `0` for best compatibility.",
                    "examples": { "enabled": { "value": true } }
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 50,
                    "description": "Must pass 'valid_name'."
                  },
                  "email": {
                    "type": "string",
                    "nullable": true,
                    "format": "email",
                    "maxLength": 255
                  },
                  "avatar": {
                    "type": "string",
                    "nullable": true,
                    "format": "binary",
                    "description": "Image file (≤ 2MB)."
                  },
                  "gender": {
                    "type": "string",
                    "nullable": true,
                    "enum": ["male", "female", "other"]
                  },
                  "contact_groups": {
                    "type": "array",
                    "nullable": true,
                    "description": "Array of group IDs. Must exist in workspace and be assignable.",
                    "items": { "type": "integer", "minimum": 1 },
                    "examples": { "eg": { "value": [4, 5] } }
                  },
                  "fields": {
                    "type": "object",
                    "nullable": true,
                    "description": "Custom fields as key-value pairs. Keys must pre-exist in this workspace (ContactField). Each value ≤ 255 chars.",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "examples": {
                      "eg": {
                        "value": { "linked_in": "https://www.linkedin.com/" }
                      }
                    }
                  }
                },
                "required": ["number"]
              },
              "encoding": {
                "avatar": {
                  "contentType": "image/*"
                },
                "contact_groups": {
                  "style": "form",
                  "explode": true
                },
                "fields": {
                  "style": "deepObject",
                  "explode": true
                },
                "status": {
                  "style": "form",
                  "explode": false
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 201 },
                    "message": {
                      "type": "string",
                      "example": "Contact created successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Created contact resource."
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/contacts/export": {
      "get": {
        "summary": "Download contacts for a workspace",
        "description": "Download all contacts (optionally filtered by a contact group) as CSV or XLSX.",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Export file format. Defaults to XLSX (matches backend).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xlsx", "csv"],
              "default": "xlsx"
            },
            "examples": {
              "xlsx": { "value": "xlsx" },
              "csv": { "value": "csv" }
            }
          },
          {
            "name": "contact_group",
            "in": "query",
            "description": "Filter by contact group ID. If omitted, all contacts are exported.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "Content-Disposition": {
                "description": "",
                "schema": { "type": "string" },
                "examples": {
                  "xlsx": { "value": "attachment; filename=\"contacts.xlsx\"" },
                  "csv": { "value": "attachment; filename=\"contacts.csv\"" }
                }
              }
            },
            "content": {
              "text/xlsx": {
                "schema": { "type": "string", "format": "binary" }
              },
              "text/csv": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/contacts/{contact}": {
      "get": {
        "summary": "Get Contact",
        "description": "Retrieve a specific contact by ID.",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact",
            "in": "path",
            "description": "ID of the contact.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "post": {
        "summary": "Update Contact",
        "description": "Update an existing contact in the specified workspace. The contact's number cannot be updated.",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "description": "ID of the workspace.",
            "schema": { "type": "string", "format": "uuid" }
          },
          {
            "name": "contact",
            "in": "path",
            "required": true,
            "description": "ID of the contact.",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contact update payload (multipart/form-data). The contact's number cannot be updated.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Boolean status. In multipart, send `1` or `0` for best compatibility.",
                    "examples": { "enabled": { "value": true } }
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 50,
                    "description": "Must pass 'valid_name'."
                  },
                  "email": {
                    "type": "string",
                    "nullable": true,
                    "format": "email",
                    "maxLength": 255
                  },
                  "avatar": {
                    "type": "string",
                    "nullable": true,
                    "format": "binary",
                    "description": "Image file (≤ 2MB)."
                  },
                  "gender": {
                    "type": "string",
                    "nullable": true,
                    "enum": ["male", "female", "other"]
                  },
                  "contact_groups": {
                    "type": "array",
                    "nullable": true,
                    "description": "Array of group IDs. Must exist in workspace and be assignable.",
                    "items": { "type": "integer", "minimum": 1 },
                    "examples": { "eg": { "value": [4, 5] } }
                  },
                  "fields": {
                    "type": "object",
                    "nullable": true,
                    "description": "Custom fields as key-value pairs. Keys must pre-exist in this workspace (ContactField). Each value ≤ 255 chars.",
                    "additionalProperties": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "examples": {
                      "eg": {
                        "value": { "linked_in": "https://www.linkedin.com/" }
                      }
                    }
                  }
                }
              },
              "encoding": {
                "avatar": {
                  "contentType": "image/*"
                },
                "contact_groups": {
                  "style": "form",
                  "explode": true
                },
                "fields": {
                  "style": "deepObject",
                  "explode": true
                },
                "status": {
                  "style": "form",
                  "explode": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": {
                      "type": "string",
                      "example": "Contact updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "description": "Updated contact resource."
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    }
                  },
                  "required": ["message", "status"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Contact",
        "description": "Delete a contact by ID.",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "description": "ID of the workspace.",
            "schema": { "type": "string", "format": "uuid" }
          },
          {
            "name": "contact",
            "in": "path",
            "required": true,
            "description": "ID of the contact.",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact deleted successfully."
                    },
                    "status": {
                      "type": "integer",
                      "example": 200
                    }
                  },
                  "required": ["message", "status"]
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/contact-fields": {
      "get": {
        "summary": "Contact Fields",
        "description": "Retrieve all contact fields for a workspace.",
        "tags": ["Contact Fields"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of contact fields per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "summary": "Add Contact Field",
        "description": "Create a new contact field in the specified workspace.",
        "tags": ["Contact Fields"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Contact field creation parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique name per workspace. Only lowercase letters and underscores allowed."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "$ref": "#/components/responses/201" },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" }
        }
      }
    },
    "/workspaces/{workspace}/contact-fields/{contact-field}": {
      "get": {
        "summary": "Get Contact Field",
        "description": "Retrieve a specific contact field by ID.",
        "tags": ["Contact Fields"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "put": {
        "summary": "Update Contact Field",
        "description": "Update an existing contact field in the specified workspace.",
        "tags": ["Contact Fields"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "description": "ID of the workspace.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact-field",
            "in": "path",
            "required": true,
            "description": "ID of the contact field.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique name per workspace. Only lowercase letters and underscores allowed."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/Update200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "summary": "Delete Contact Field",
        "description": "Delete a contact field by ID.",
        "tags": ["Contact Fields"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "description": "ID of the workspace.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact-field",
            "in": "path",
            "required": true,
            "description": "ID of the contact field.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Delete200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/workspaces/{workspace}/contact-groups": {
      "get": {
        "summary": "Get Contact Groups",
        "description": "Retrieve all contact groups for a workspace.",
        "tags": ["Contact Groups"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of contact groups per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "summary": "Add Contact Group",
        "description": "Create a new contact group in the specified workspace.",
        "tags": ["Contact Groups"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique name per workspace."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "$ref": "#/components/responses/201" },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" }
        }
      }
    },
    "/workspaces/{workspace}/contact-groups/{contact-group}": {
      "get": {
        "summary": "Get Contact Group",
        "description": "Retrieve a specific contact group by ID.",
        "tags": ["Contact Groups"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact-group",
            "in": "path",
            "description": "ID of the contact group.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "put": {
        "summary": "Update Contact Group",
        "description": "Update an existing contact group in the specified workspace.",
        "tags": ["Contact Groups"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "description": "ID of the workspace.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact-group",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/Update200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "summary": "Delete Contact Group",
        "description": "Delete a contact group by ID.",
        "tags": ["Contact Groups"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "description": "ID of the workspace.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact-group",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Delete200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/workspaces/{workspace}/permissions": {
      "get": {
        "summary": "Get Permissions",
        "description": "Retrieve the permissions for the specified workspace.",
        "tags": ["Permissions"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": ["data"]
                },
                "examples": {
                  "permissions": {
                    "value": {
                      "data": [
                        {
                          "group-1": []
                        },
                        {
                          "group-2": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/roles-all": {
      "get": {
        "summary": "Get All Roles",
        "description": "Retrieve all roles available in the specified workspace.",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["data"],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/users": {
      "get": {
        "summary": "Get Users in Workspace",
        "description": "Retrieve all users associated with the specified workspace.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of users per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "summary": "Add User to Workspace",
        "description": "Create a new user in the specified workspace.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "User creation payload (multipart/form-data).",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "nullable": true,
                    "format": "binary",
                    "description": "Image file (≤ 1MB)."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Required. Must pass 'valid_name'."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Required. Must be unique."
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 255,
                    "description": "Required."
                  },
                  "confirm_password": {
                    "type": "string",
                    "description": "Required. Must match password."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Required. Must be a valid timezone."
                  },
                  "status": {
                    "type": "boolean",
                    "description": "Required."
                  },
                  "client": {
                    "type": "boolean",
                    "description": "Required for partner workspace."
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password",
                  "confirm_password",
                  "timezone",
                  "status"
                ]
              },
              "encoding": {
                "avatar": {
                  "contentType": "image/*"
                }
              }
            }
          }
        },
        "responses": {
          "201": { "$ref": "#/components/responses/201" },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" }
        }
      }
    },
    "/workspaces/{workspace}/users/{user}": {
      "get": {
        "summary": "Get User",
        "description": "Retrieve a specific user by ID in the specified workspace.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "user",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "post": {
        "summary": "Update User in Workspace",
        "description": "Update an existing user in the specified workspace.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "user",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "User update payload (multipart/form-data).",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "nullable": true,
                    "format": "binary",
                    "description": "Image file (≤ 1MB)."
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Must pass 'valid_name'."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Must be unique."
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 255,
                    "description": "Optional. If provided, will update password."
                  },
                  "confirm_password": {
                    "type": "string",
                    "description": "Must match password if password is provided."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Must be a valid timezone."
                  },
                  "status": {
                    "type": "boolean",
                    "description": ""
                  },
                  "client": {
                    "type": "boolean",
                    "description": "Required for partner workspace."
                  }
                },
                "required": ["name", "email", "timezone", "status"]
              },
              "encoding": {
                "avatar": {
                  "contentType": "image/*"
                }
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/Update200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Delete a user by ID in the specified workspace.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "user",
            "in": "path",
            "description": "ID of the user.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Delete200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/workspaces/{workspace}/roles": {
      "get": {
        "summary": "Get Roles",
        "description": "Retrieve all roles for the specified workspace.",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {
        "summary": "Create Role",
        "description": "Create a new role in the specified workspace.",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "permissions"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique name for the role."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "$ref": "#/components/responses/201" },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" }
        }
      }
    },
    "/workspaces/{workspace}/roles/{role}": {
      "get": {
        "summary": "Get Role",
        "description": "Retrieve a specific role by ID in the specified workspace.",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "ID of the role.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "put": {
        "summary": "Update Role",
        "description": "Update an existing role in the specified workspace.",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "permissions"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Unique name for the role."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "$ref": "#/components/responses/Update200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "summary": "Delete Role",
        "description": "Delete a role by ID in the specified workspace.",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "ID of the role.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Delete200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/workspaces/{workspace}/templates": {
      "get": {
        "summary": "Get Templates",
        "description": "Retrieve all templates for the specified workspace.",
        "tags": ["Templates"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of templates per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/templates/sync": {
      "post": {
        "summary": "Sync Templates",
        "description": "Synchronize templates in the specified workspace.",
        "tags": ["Templates"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/templates/{template}": {
      "get": {
        "summary": "Get Template",
        "description": "Retrieve a specific template by ID in the specified workspace.",
        "tags": ["Templates"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "template",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "summary": "Delete Template",
        "description": "Delete a template by ID in the specified workspace.",
        "tags": ["Templates"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "template",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Delete200" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/workspaces/{workspace}/channel": {
      "get": {
        "summary": "Get Channel",
        "description": "Retrieve the channel for the specified workspace.",
        "tags": ["Channel"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/channel/wallet/transactions": {
      "get": {
        "summary": "Get Wallet Transactions",
        "description": "Retrieve wallet transactions for the specified workspace.",
        "tags": ["Wallet Transactions"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of transactions per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/channel/wallet/transactions/{transaction}/invoice": {
      "get": {
        "summary": "Download Wallet Transaction Invoice",
        "description": "Download the invoice for a specific wallet transaction as a PDF file.",
        "tags": ["Wallet Transactions"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "transaction",
            "in": "path",
            "description": "ID of the wallet transaction.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PDF invoice file.",
            "headers": {
              "Content-Disposition": {
                "description": "Indicates file download.",
                "schema": { "type": "string" },
                "example": "attachment; filename=\"invoice.pdf\""
              }
            },
            "content": {
              "application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    },
    "/workspaces/{workspace}/channel/wallet/conversations": {
      "get": {
        "summary": "Get Wallet Conversation List",
        "description": "Retrieve the conversation list for the specified workspace's wallet.",
        "tags": ["Wallet Conversations"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of conversations per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/channel/wallet/refresh": {
      "post": {
        "summary": "Refresh Wallet Channel",
        "description": "Refresh the wallet channel for the specified workspace.",
        "tags": ["Wallet Channel"],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/workspaces/{workspace}/channel/wallet/transfer": {
      "get": {
        "summary": "Get Transfer List",
        "description": "Retrieve wallet transfer details for the specified workspace.",
        "tags": ["Wallet Transfer"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of transfers per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WorkspaceListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Data retrieved successfully."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            }
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9b8511c7-ad64-49e3-89d3-428ce8d0efe4"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "test-workspace"
              },
              "status": {
                "type": "integer",
                "example": 1
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2025-05-14T04:18:19.000000Z"
              }
            }
          }
        }
      },
      "WorkspaceCreateRequest": {
        "type": "object",
        "required": ["name", "type", "status"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name per user."
          },
          "type": {
            "type": "string",
            "enum": ["INTERNAL", "PARTNER"],
            "description": "Type of workspace."
          },
          "status": {
            "type": "boolean",
            "description": "Workspace status (active/inactive)."
          }
        }
      },
      "WorkspaceUpdateRequest": {
        "type": "object",
        "required": ["name", "type", "status"],
        "properties": {
          "name": {
            "type": "string",
            "description": "New workspace name."
          },
          "type": {
            "type": "string",
            "enum": ["INTERNAL", "PARTNER"],
            "description": "Must be a valid workspace type."
          },
          "status": {
            "type": "boolean",
            "description": "New status (true for active, false for inactive)."
          }
        }
      },
      "PermissionsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Permissions fetched successfully."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "contacts.view"
            }
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "PermissionsUpdateRequest": {
        "type": "object",
        "required": ["permissions"],
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Must match valid permissions from Permissions::values()."
            }
          }
        }
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operation completed successfully."
          },
          "data": {
            "type": "array",
            "items": {}
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "Paginate": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "links": {
            "type": "object",
            "properties": {}
          },
          "meta": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer",
                "example": 1
              },
              "per_page": {
                "type": "integer",
                "example": 10
              },
              "total": {
                "type": "integer",
                "example": 100
              },
              "last_page": {
                "type": "integer",
                "example": 10
              },
              "from": {
                "type": "integer",
                "example": 1
              },
              "to": {
                "type": "integer",
                "example": 10
              }
            }
          }
        },
        "required": ["data", "meta"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "Paginate200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Paginate"
            }
          }
        }
      },
      "Update200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Resource updated successfully."
                },
                "data": {
                  "type": "object",
                  "description": "Updated resource data."
                }
              },
              "required": ["status", "message", "data"]
            }
          }
        }
      },
      "Delete200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Resource deleted successfully."
                },
                "status": {
                  "type": "integer",
                  "example": 200
                }
              },
              "required": ["message", "status"]
            }
          }
        }
      },
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {}
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "201": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Resource created successfully."
                },
                "data": {
                  "type": "object",
                  "description": "Created resource data."
                }
              },
              "required": ["status", "message", "data"]
            }
          }
        }
      },
      "401": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthenticated."
                }
              },
              "required": ["message"]
            }
          }
        }
      },
      "404": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Resource not found."
                },
                "status": {
                  "type": "integer",
                  "example": 404
                }
              },
              "required": ["message", "status"]
            }
          }
        }
      },
      "422": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Validation error"
                },
                "errors": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": { "type": "string" }
                  }
                }
              },
              "required": ["message", "errors"]
            }
          }
        }
      }
    }
  }
}
