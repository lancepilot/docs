{
  "openapi": "3.1.0",
  "info": {
    "title": "Lancepilot API",
    "description": "API for Lancepilot",
    "version": "1.0.0",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://lasting-mudfish-lucky.ngrok-free.app/api/v3"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/workspaces": {
      "get": {
        "summary": "Get all workspaces",
        "description": "Retrieve a list of all workspaces associated with the authenticated user.",
        "tags": ["Workspace"],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "description": "Filter workspaces based on search criteria.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of workspaces retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access."
          }
        }
      },
      "post": {
        "summary": "Create a new workspace",
        "description": "Create a new workspace for the authenticated user.",
        "tags": ["Workspace"],
        "requestBody": {
          "description": "Workspace creation parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Workspace created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Exceeds workspace creation limit."
          },
          "422": {
            "description": "Unprocessable Entity: Validation errors."
          }
        }
      }
    },
    "/workspaces/{workspace_id}": {
      "post": {
        "summary": "Update a workspace",
        "description": "Update the specified workspace.",
        "tags": ["Workspace"],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "description": "ID of the workspace to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Workspace update parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workspace updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a workspace",
        "description": "Delete a workspace by ID.",
        "tags": ["Workspace"],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "description": "ID of the workspace to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: Workspace not found or unauthorized access."
          }
        }
      }
    },
    "/workspaces/partner-permissions": {
      "get": {
        "summary": "Get partner default permissions",
        "description": "Retrieve the authenticated userâ€™s default permissions for partner workspaces.",
        "tags": ["Workspace"],
        "responses": {
          "200": {
            "description": "Permissions fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/update-partner-permissions": {
      "post": {
        "summary": "Update partner default permissions",
        "description": "Update the default permissions applied to new partner workspaces created by the user.",
        "tags": ["Workspace"],
        "requestBody": {
          "description": "Permissions update parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionsUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permissions updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspace}/contacts": {
      "get": {
        "summary": "Get contacts for a workspace",
        "description": "Retrieve contacts associated with a specific workspace.",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter contacts based on search criteria.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of contacts per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": { "$ref": "#/components/responses/Paginate200" },
          "401": { "$ref": "#/components/responses/401" }
        }
      },
      "post": {}
    },
    "/workspaces/{workspace}/contacts/export": {
      "get": {
        "summary": "Download contacts for a workspace",
        "description": "Download all contacts (optionally filtered by a contact group) as CSV or XLSX.",
        "tags": ["Contacts"],
        "parameters": [
          {
            "name": "workspace",
            "in": "path",
            "description": "ID of the workspace.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Export file format. Defaults to XLSX (matches backend).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xlsx", "csv"],
              "default": "xlsx"
            },
            "examples": {
              "xlsx": { "value": "xlsx" },
              "csv": { "value": "csv" }
            }
          },
          {
            "name": "contact_group",
            "in": "query",
            "description": "Filter by contact group ID. If omitted, all contacts are exported.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "Content-Disposition": {
                "description": "",
                "schema": { "type": "string" },
                "examples": {
                  "xlsx": { "value": "attachment; filename=\"contacts.xlsx\"" },
                  "csv": { "value": "attachment; filename=\"contacts.csv\"" }
                }
              }
            },
            "content": {
              "text/xlsx": {
                "schema": { "type": "string", "format": "binary" }
              },
              "text/csv": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WorkspaceListResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Data retrieved successfully."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            }
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "9b8511c7-ad64-49e3-89d3-428ce8d0efe4"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "test-workspace"
              },
              "status": {
                "type": "integer",
                "example": 1
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2025-05-14T04:18:19.000000Z"
              }
            }
          }
        }
      },
      "WorkspaceCreateRequest": {
        "type": "object",
        "required": ["name", "type", "status"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name per user."
          },
          "type": {
            "type": "string",
            "enum": ["INTERNAL", "PARTNER"],
            "description": "Type of workspace."
          },
          "status": {
            "type": "boolean",
            "description": "Workspace status (active/inactive)."
          }
        }
      },
      "WorkspaceUpdateRequest": {
        "type": "object",
        "required": ["name", "type", "status"],
        "properties": {
          "name": {
            "type": "string",
            "description": "New workspace name."
          },
          "type": {
            "type": "string",
            "enum": ["INTERNAL", "PARTNER"],
            "description": "Must be a valid workspace type."
          },
          "status": {
            "type": "boolean",
            "description": "New status (true for active, false for inactive)."
          }
        }
      },
      "PermissionsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Permissions fetched successfully."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "contacts.view"
            }
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "PermissionsUpdateRequest": {
        "type": "object",
        "required": ["permissions"],
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Must match valid permissions from Permissions::values()."
            }
          }
        }
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Operation completed successfully."
          },
          "data": {
            "type": "array",
            "items": {}
          },
          "status": {
            "type": "integer",
            "example": 200
          }
        }
      },
      "Paginate": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "links": {
            "type": "object",
            "properties": {}
          },
          "meta": {
            "type": "object",
            "properties": {
              "current_page": {
                "type": "integer",
                "example": 1
              },
              "per_page": {
                "type": "integer",
                "example": 10
              },
              "total": {
                "type": "integer",
                "example": 100
              },
              "last_page": {
                "type": "integer",
                "example": 10
              },
              "from": {
                "type": "integer",
                "example": 1
              },
              "to": {
                "type": "integer",
                "example": 10
              }
            }
          }
        },
        "required": ["data", "meta"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "Paginate200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Paginate"
            }
          }
        }
      },
      "401": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthenticated."
                }
              },
              "required": ["message"]
            }
          }
        }
      }
    }
  }
}
